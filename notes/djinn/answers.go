package main

import (
	"bufio"
	"fmt"
	"net"
	"os"
	"strconv"
	"strings"
	"time"
)

func main() {

	target := os.Args[1]
	conn, err := net.DialTimeout("tcp", target, 10*time.Second)
	if err != nil {
		panic(err)
	}

	scanner := bufio.NewScanner(conn)

	if err != nil {
		panic(err)
	}

	for scanner.Scan() {
		data := scanner.Text()
		if err != nil {
			panic(err)
		}

		if strings.Contains(data, "(") && strings.Contains(data, ",") {
			p := strings.Split(data, "")

			a, err := strconv.Atoi(p[1])
			b, err := strconv.Atoi(p[9])

			if err != nil {
				panic(err)
			}

			s := solve(a, b, p[5])
			fmt.Printf("Answer is: %d\n", s)
			conn.Write([]byte(string(s)))

		}

		fmt.Println(string(data))
	}

}

func solve(a, b int, op string) int {

	if strings.Contains(op, "*") {
		return a * b
	} else if strings.Contains(op, "-") {
		return a - b
	} else if strings.Contains(op, "+") {
		return a + b
	} else if strings.Contains(op, "/") {
		return a / b
	} else {
		return 4242
	}
}
